[package]
name = "clnt"
version = "0.1.0"
authors = ["leod <subtle.frustration@proton.me>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
log = "0.4"
serde = { version = "1.0" }
slab = "0.4"
rand = "0.7"
getrandom = { version = "0.1", features = ["wasm-bindgen"] }

js-sys = "0.3.45"
wasm-bindgen = { version = "=0.2.68", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.18"
console_log = "0.2"

nalgebra = { version = "0.22" }
instant = { version = "0.1", features = ["wasm-bindgen"] }

pareen = { git = "https://github.com/leod/pareen.git", branch = "anim_with_dur", features = ["easer"] }
coarse-prof = { git = "https://github.com/leod/coarse-prof.git" }
webglee = { git = "https://github.com/leod/webglee.git" }

comn = { path = "../comn" }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

[dependencies.web-sys]
version = "0.3.37"
features = [
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'Window',
  'Location',
  'Event',
  'ErrorEvent',
  'Blob',
  'MessageEvent',
  'RtcConfiguration',
  'RtcPeerConnection',
  'RtcDataChannel',
  'RtcDataChannelInit',
  'RtcSessionDescriptionInit',
  'RtcIceCandidate',
  'RtcDataChannelType',
  'RtcDataChannelState',
]

